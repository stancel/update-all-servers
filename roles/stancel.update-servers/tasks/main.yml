---
# tasks file for update-servers

- name: 'Check to see if the yum package manager is used'
  stat:
    path: /usr/bin/yum
  register: pkg

- name: 'Update and upgrade apt packages'
  become: true
  become_method: sudo
  apt:
    upgrade: yes
    update_cache: yes
    cache_valid_time: 86400 #One day
  when: pkg.stat.exists == false

- name: 'Upgrade all yum packages'
  become: true
  become_method: sudo
  yum:
    name: '*'
    state: latest
  when: pkg.stat.exists == true

# - name: 'Check if a reboot is required'
#   shell: "[ -f /var/run/reboot-required ]"
#   failed_when: False
#   register: reboot_required
#   changed_when: reboot_required.rc == 0

- name: Check if reboot is required
  become: true
  become_method: sudo
  stat:
    path: /var/run/reboot-required
  register: reboot_required_file


- block:

    - name: "Rebooting Server" 
      become: true
      become_method: sudo
      shell: 'sleep 1 && shutdown -r now "Reboot triggered by Ansible" && sleep 1'
      async: 1
      poll: 0

    - name: "Confirming Server comes back online"
      become: true
      become_method: sudo
      local_action:
        module: wait_for
          host="{{ ansible_ssh_host }}"
          port=22
          delay=60
          timeout=320
          connect_timeout=15
          state=started   

    # - name: "Confirming Server comes back online"  
      # local_action: wait_for host={{ ansible_ssh_host }} state=started port=22 delay=30 timeout=300 connect_timeout=15
    
  # Only execute the above task block if we have specifed to reboot and the server needs it
  when: update_servers_reboot == "yes" and reboot_required_file.stat.exists








